// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using amorphie.user.data;

#nullable disable

namespace amorphie.user.data.Migrations
{
    [DbContext(typeof(UserDBContext))]
    [Migration("20230111130921_UserTableEdit")]
    partial class UserTableEdit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("amorphie.user.data.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<int?>("State")
                        .HasColumnType("integer");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.Property<string>("TcNo")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2a30108b-88b5-4903-ab7a-90b691cdc5a5"),
                            Name = "Damla",
                            Password = "123",
                            Surname = "Erhan",
                            TcNo = "12345678912"
                        });
                });

            modelBuilder.Entity("amorphie.user.data.UserSecurityQuestion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("SecurityQuestion")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserSecurityQuestions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("76f62669-5301-4998-bae3-89f85aa0a07c"),
                            SecurityQuestion = "en sevdiğiniz araba modeli",
                            UserId = new Guid("2a30108b-88b5-4903-ab7a-90b691cdc5a5")
                        });
                });

            modelBuilder.Entity("amorphie.user.data.UserTag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserTags");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f773ec73-cf51-4800-94ac-a950301cd7b2"),
                            Name = "user-list-get",
                            UserId = new Guid("2a30108b-88b5-4903-ab7a-90b691cdc5a5")
                        });
                });

            modelBuilder.Entity("amorphie.user.data.UserSecurityQuestion", b =>
                {
                    b.HasOne("amorphie.user.data.User", "User")
                        .WithMany("UserSecurityQuestions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("amorphie.user.data.UserTag", b =>
                {
                    b.HasOne("amorphie.user.data.User", "User")
                        .WithMany("UserTags")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("amorphie.user.data.User", b =>
                {
                    b.Navigation("UserSecurityQuestions");

                    b.Navigation("UserTags");
                });
#pragma warning restore 612, 618
        }
    }
}
