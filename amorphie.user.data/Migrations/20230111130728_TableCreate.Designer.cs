// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using amorphie.user.data;

#nullable disable

namespace amorphie.user.data.Migrations
{
    [DbContext(typeof(UserDBContext))]
    [Migration("20230111130728_TableCreate")]
    partial class TableCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("amorphie.user.data.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<int?>("State")
                        .HasColumnType("integer");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.Property<string>("TcNo")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("750b7a20-839c-4d9b-bc7d-247c09d4d784"),
                            Name = "Damla",
                            Password = "12345",
                            Surname = "Erhan",
                            TcNo = "12345"
                        });
                });

            modelBuilder.Entity("amorphie.user.data.UserSecurityQuestion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("SecurityQuestion")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserSecurityQuestions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("633d9b29-81b8-4c11-a611-ef61d862ed51"),
                            SecurityQuestion = "en sevdiğiniz araba",
                            UserId = new Guid("750b7a20-839c-4d9b-bc7d-247c09d4d784")
                        });
                });

            modelBuilder.Entity("amorphie.user.data.UserTag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserTags");

                    b.HasData(
                        new
                        {
                            Id = new Guid("03832c57-53c1-4b72-b21f-bc2122b5b46c"),
                            Name = "user-list-get",
                            UserId = new Guid("750b7a20-839c-4d9b-bc7d-247c09d4d784")
                        });
                });

            modelBuilder.Entity("amorphie.user.data.UserSecurityQuestion", b =>
                {
                    b.HasOne("amorphie.user.data.User", "User")
                        .WithMany("UserSecurityQuestions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("amorphie.user.data.UserTag", b =>
                {
                    b.HasOne("amorphie.user.data.User", "User")
                        .WithMany("UserTags")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("amorphie.user.data.User", b =>
                {
                    b.Navigation("UserSecurityQuestions");

                    b.Navigation("UserTags");
                });
#pragma warning restore 612, 618
        }
    }
}
